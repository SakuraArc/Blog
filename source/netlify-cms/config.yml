# 后端配置：连接到 Git 仓库，使用 Git Gateway
backend:
  name: git-gateway # 使用 Netlify 的 Git Gateway 服务
  branch: main     # 你的 Hexo 仓库的主分支 (通常是 main 或 master)

  # 媒体文件配置
media_folder: "source/uploads" # 您的图片存储的路径（Git 仓库相对路径）
public_folder: "/uploads"      # 访问图片的 URL 路径（网站根目录相对路径）
media_library:
  name: upload               # 使用 Git 上传方式

# 认证配置：如果你部署在 Netlify，推荐使用 Netlify Identity
publish_mode: simple # 简单的发布模式

# 如果你的博客需要在登录后才能访问，并且你希望 Netlify CMS 的登录也与你的 Firebase 认证流程挂钩，
# 那么需要更复杂的配置，通常是使用 Netlify Identity + 外部 OAuth 提供商 (如 GitHub)
# 但最简单的做法是，Netlify CMS 使用自己的认证机制 (如 GitHub/GitLab OAuth)。
# 这里我们使用 Git Gateway，它默认与 Netlify Identity 集成。

# UI 界面配置
display_url: https://imaginative-jalebi-51d222.netlify.app/ # 这个 URL 将显示在 Netlify CMS 的后台界面中，点击可查看您的博客
# 注意：这里最好填写您部署在 Netlify 后的最终域名，例如 https://your-hexo-blog.netlify.app

# 内容集合 (Collections)：定义你的博客内容模型
collections:
  - name: "posts" # 集合的内部名称
    label: "博客文章" # 显示在 CMS 侧边栏的名称
    folder: "_posts" # Markdown 文件存储的目录 (Hexo 的文章目录)
    create: true # 允许在 CMS 中创建新文章
    slug: "{{year}}-{{month}}-{{day}}-{{slug}}" # 文章文件名格式 (例如 2023-10-27-hello-world.md)
    fields: # 文章的字段定义
      - {label: "布局", name: "layout", widget: "hidden", default: "post"} # Hexo 文章的 layout
      - {label: "标题", name: "title", widget: "string", required: true}
      - {label: "发布日期", name: "date", widget: "datetime", format: "YYYY-MM-DD HH:mm:ss", required: true}
      - {label: "描述", name: "description", widget: "string", required: false}
      - {label: "标签", name: "tags", widget: "list", required: false} # 标签列表
      - {label: "分类", name: "categories", widget: "list", required: false} # 分类列表
      - {label: "内容", name: "body", widget: "markdown", required: true} # 文章主要内容，使用 Markdown 编辑器

skip_render:
  - 'cms/**'  # 这会告诉 Hexo 不要处理 'source/cms/' 目录下的内容，直接将其复制到 public 目录。